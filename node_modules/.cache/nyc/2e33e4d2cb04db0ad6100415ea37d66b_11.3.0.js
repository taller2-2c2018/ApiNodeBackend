var cov_2gizuw3zua=function(){var path='/usr/src/controllers/serverController.js',hash='8f0fb9a834a7cfcfa1641eafc66d9f0d67b17a25',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/usr/src/controllers/serverController.js',statementMap:{'0':{start:{line:1,column:15},end:{line:1,column:45}},'1':{start:{line:2,column:22},end:{line:2,column:66}},'2':{start:{line:3,column:18},end:{line:3,column:46}},'3':{start:{line:5,column:20},end:{line:9,column:1}},'4':{start:{line:6,column:16},end:{line:6,column:42}},'5':{start:{line:7,column:2},end:{line:7,column:37}},'6':{start:{line:8,column:2},end:{line:8,column:101}},'7':{start:{line:11,column:21},end:{line:15,column:1}},'8':{start:{line:12,column:17},end:{line:12,column:66}},'9':{start:{line:13,column:2},end:{line:13,column:42}},'10':{start:{line:14,column:2},end:{line:14,column:69}},'11':{start:{line:17,column:18},end:{line:21,column:1}},'12':{start:{line:18,column:15},end:{line:18,column:60}},'13':{start:{line:19,column:2},end:{line:19,column:37}},'14':{start:{line:20,column:2},end:{line:20,column:99}},'15':{start:{line:23,column:21},end:{line:27,column:1}},'16':{start:{line:24,column:17},end:{line:24,column:75}},'17':{start:{line:25,column:2},end:{line:25,column:37}},'18':{start:{line:26,column:2},end:{line:26,column:91}},'19':{start:{line:29,column:19},end:{line:33,column:1}},'20':{start:{line:30,column:17},end:{line:30,column:67}},'21':{start:{line:31,column:2},end:{line:31,column:42}},'22':{start:{line:32,column:2},end:{line:32,column:69}},'23':{start:{line:35,column:21},end:{line:39,column:1}},'24':{start:{line:36,column:17},end:{line:36,column:65}},'25':{start:{line:37,column:2},end:{line:37,column:43}},'26':{start:{line:38,column:2},end:{line:38,column:69}},'27':{start:{line:44,column:0},end:{line:53,column:1}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:5,column:20},end:{line:5,column:21}},loc:{start:{line:5,column:46},end:{line:9,column:1}},line:5},'1':{name:'(anonymous_1)',decl:{start:{line:11,column:21},end:{line:11,column:22}},loc:{start:{line:11,column:47},end:{line:15,column:1}},line:11},'2':{name:'(anonymous_2)',decl:{start:{line:17,column:18},end:{line:17,column:19}},loc:{start:{line:17,column:44},end:{line:21,column:1}},line:17},'3':{name:'(anonymous_3)',decl:{start:{line:23,column:21},end:{line:23,column:22}},loc:{start:{line:23,column:47},end:{line:27,column:1}},line:23},'4':{name:'(anonymous_4)',decl:{start:{line:29,column:19},end:{line:29,column:20}},loc:{start:{line:29,column:45},end:{line:33,column:1}},line:29},'5':{name:'(anonymous_5)',decl:{start:{line:35,column:21},end:{line:35,column:22}},loc:{start:{line:35,column:47},end:{line:39,column:1}},line:35}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const models=(cov_2gizuw3zua.s[0]++,require('../models/sequelize'));const serverService=(cov_2gizuw3zua.s[1]++,require('../services/serverService')(models));const responser=(cov_2gizuw3zua.s[2]++,require('../util/responser'));cov_2gizuw3zua.s[3]++;const listServers=async function(req,res){cov_2gizuw3zua.f[0]++;let servers=(cov_2gizuw3zua.s[4]++,await serverService.list());cov_2gizuw3zua.s[5]++;res.statusCode=responser.codes.OK;cov_2gizuw3zua.s[6]++;res.json(responser.createSuccessResponseWithMetadataCollection(res.statusCode,servers,'Servers'));};cov_2gizuw3zua.s[7]++;const createServer=async function(req,res){cov_2gizuw3zua.f[1]++;let response=(cov_2gizuw3zua.s[8]++,await serverService.create(req.user_id,req.body));cov_2gizuw3zua.s[9]++;res.statusCode=responser.codes.CREATED;cov_2gizuw3zua.s[10]++;res.json(responser.createSuccessResponse(res.statusCode,response));};cov_2gizuw3zua.s[11]++;const getServer=async function(req,res){cov_2gizuw3zua.f[2]++;let server=(cov_2gizuw3zua.s[12]++,await serverService.get(req.params.server_id));cov_2gizuw3zua.s[13]++;res.statusCode=responser.codes.OK;cov_2gizuw3zua.s[14]++;res.json(responser.createSuccessResponseWithMetadataCollection(res.statusCode,server,'Server'));};cov_2gizuw3zua.s[15]++;const updateServer=async function(req,res){cov_2gizuw3zua.f[3]++;let response=(cov_2gizuw3zua.s[16]++,await serverService.update(req.params.server_id,req.body));cov_2gizuw3zua.s[17]++;res.statusCode=responser.codes.OK;cov_2gizuw3zua.s[18]++;res.json(responser.createSuccessResponseWithMetadata(res.statusCode,response,'Server'));};cov_2gizuw3zua.s[19]++;const resetToken=async function(req,res){cov_2gizuw3zua.f[4]++;let response=(cov_2gizuw3zua.s[20]++,await serverService.resetToken(req.file,req.body));cov_2gizuw3zua.s[21]++;res.statusCode=responser.codes.CREATED;cov_2gizuw3zua.s[22]++;res.json(responser.createSuccessResponse(res.statusCode,response));};cov_2gizuw3zua.s[23]++;const deleteServer=async function(req,res){cov_2gizuw3zua.f[5]++;let response=(cov_2gizuw3zua.s[24]++,await serverService.delete(req.params.server_id));cov_2gizuw3zua.s[25]++;res.statusCode=responser.codes.ACCEPTED;cov_2gizuw3zua.s[26]++;res.json(responser.createSuccessResponse(res.statusCode,response));};cov_2gizuw3zua.s[27]++;module.exports={v0:{listServers:listServers,createServer:createServer,getServer:getServer,updateserver:updateServer,resetToken:resetToken,deleteServer:deleteServer}};