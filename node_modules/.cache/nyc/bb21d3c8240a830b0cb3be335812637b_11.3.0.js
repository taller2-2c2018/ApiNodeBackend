var cov_raemn7t6=function(){var path='/usr/src/app.js',hash='b9dc076b057f73e4cfcaf426c31bbfba89e0b569',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/usr/src/app.js',statementMap:{'0':{start:{line:1,column:14},end:{line:1,column:32}},'1':{start:{line:2,column:13},end:{line:2,column:30}},'2':{start:{line:3,column:17},end:{line:3,column:39}},'3':{start:{line:4,column:18},end:{line:4,column:47}},'4':{start:{line:5,column:16},end:{line:5,column:43}},'5':{start:{line:7,column:10},end:{line:7,column:19}},'6':{start:{line:9,column:0},end:{line:15,column:2}},'7':{start:{line:10,column:2},end:{line:10,column:48}},'8':{start:{line:11,column:2},end:{line:11,column:77}},'9':{start:{line:12,column:2},end:{line:12,column:109}},'10':{start:{line:13,column:2},end:{line:13,column:77}},'11':{start:{line:14,column:2},end:{line:14,column:8}},'12':{start:{line:17,column:0},end:{line:26,column:1}},'13':{start:{line:18,column:13},end:{line:18,column:26}},'14':{start:{line:19,column:15},end:{line:19,column:30}},'15':{start:{line:21,column:24},end:{line:21,column:94}},'16':{start:{line:23,column:2},end:{line:23,column:56}},'17':{start:{line:25,column:2},end:{line:25,column:24}},'18':{start:{line:28,column:0},end:{line:28,column:26}},'19':{start:{line:29,column:0},end:{line:29,column:49}},'20':{start:{line:31,column:0},end:{line:31,column:27}},'21':{start:{line:34,column:0},end:{line:46,column:2}},'22':{start:{line:36,column:2},end:{line:36,column:34}},'23':{start:{line:37,column:2},end:{line:41,column:8}},'24':{start:{line:43,column:2},end:{line:45,column:72}},'25':{start:{line:48,column:0},end:{line:48,column:20}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:9,column:8},end:{line:9,column:9}},loc:{start:{line:9,column:34},end:{line:15,column:1}},line:9},'1':{name:'(anonymous_1)',decl:{start:{line:34,column:8},end:{line:34,column:9}},loc:{start:{line:34,column:39},end:{line:46,column:1}},line:34}},branchMap:{'0':{loc:{start:{line:17,column:0},end:{line:26,column:1}},type:'if',locations:[{start:{line:17,column:0},end:{line:26,column:1}},{start:{line:17,column:0},end:{line:26,column:1}}],line:17},'1':{loc:{start:{line:37,column:21},end:{line:41,column:8}},type:'cond-expr',locations:[{start:{line:40,column:6},end:{line:40,column:9}},{start:{line:41,column:6},end:{line:41,column:8}}],line:37},'2':{loc:{start:{line:44,column:12},end:{line:44,column:29}},type:'binary-expr',locations:[{start:{line:44,column:12},end:{line:44,column:22}},{start:{line:44,column:26},end:{line:44,column:29}}],line:44},'3':{loc:{start:{line:45,column:35},end:{line:45,column:52}},type:'binary-expr',locations:[{start:{line:45,column:35},end:{line:45,column:45}},{start:{line:45,column:49},end:{line:45,column:52}}],line:45}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0},f:{'0':0,'1':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let express=(cov_raemn7t6.s[0]++,require('express'));let logger=(cov_raemn7t6.s[1]++,require('morgan'));let bodyParser=(cov_raemn7t6.s[2]++,require('body-parser'));let apiVersion0=(cov_raemn7t6.s[3]++,require('./routes/v0/api_v0'));let responser=(cov_raemn7t6.s[4]++,require('./util/responser'));let app=(cov_raemn7t6.s[5]++,express());cov_raemn7t6.s[6]++;app.use(function(req,res,next){cov_raemn7t6.f[0]++;cov_raemn7t6.s[7]++;res.header('Access-Control-Allow-Origin','*');cov_raemn7t6.s[8]++;res.header('Access-Control-Allow-Methods','GET, POST, PUT, DELETE, PATCH');cov_raemn7t6.s[9]++;res.header('Access-Control-Allow-Headers','Origin, X-Requested-With, Authorization, Content-Type, Accept');cov_raemn7t6.s[10]++;res.header('Cache-Control','private, no-cache, no-store, must-revalidate');cov_raemn7t6.s[11]++;next();});cov_raemn7t6.s[12]++;if(process.env.PRODUCTION_LOG){cov_raemn7t6.b[0][0]++;const fs=(cov_raemn7t6.s[13]++,require('fs'));const path=(cov_raemn7t6.s[14]++,require('path'));// create a write stream (in append mode)
let accessLogStream=(cov_raemn7t6.s[15]++,fs.createWriteStream(path.join(__dirname,'access.log'),{flags:'a'}));// setup the logger
cov_raemn7t6.s[16]++;app.use(logger('combined',{stream:accessLogStream}));}else{cov_raemn7t6.b[0][1]++;cov_raemn7t6.s[17]++;app.use(logger('dev'));}cov_raemn7t6.s[18]++;app.use(bodyParser.json());cov_raemn7t6.s[19]++;app.use(bodyParser.urlencoded({extended:false}));cov_raemn7t6.s[20]++;app.use('/v0',apiVersion0);// error handler
cov_raemn7t6.s[21]++;app.use(function(err,req,res,next){cov_raemn7t6.f[1]++;cov_raemn7t6.s[22]++;// set locals, only providing error in development
res.locals.message=err.message;cov_raemn7t6.s[23]++;res.locals.error=req.app.get('env')==='development'?(cov_raemn7t6.b[1][0]++,err):(cov_raemn7t6.b[1][1]++,{});// send an error message
cov_raemn7t6.s[24]++;res.status((cov_raemn7t6.b[2][0]++,err.status)||(cov_raemn7t6.b[2][1]++,500)).send(responser.createResponse((cov_raemn7t6.b[3][0]++,err.status)||(cov_raemn7t6.b[3][1]++,500),err.message,null));});cov_raemn7t6.s[25]++;module.exports=app;