var cov_alfc654ha=function(){var path='/usr/src/routes/v0/api/roles.js',hash='f0a8e6d9d5107fc98b3abedd1e96d3c21552f735',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/usr/src/routes/v0/api/roles.js',statementMap:{'0':{start:{line:1,column:16},end:{line:1,column:34}},'1':{start:{line:2,column:15},end:{line:2,column:51}},'2':{start:{line:4,column:15},end:{line:4,column:31}},'3':{start:{line:5,column:23},end:{line:5,column:52}},'4':{start:{line:6,column:23},end:{line:6,column:70}},'5':{start:{line:7,column:22},end:{line:7,column:67}},'6':{start:{line:9,column:27},end:{line:9,column:82}},'7':{start:{line:10,column:28},end:{line:10,column:84}},'8':{start:{line:12,column:48},end:{line:12,column:68}},'9':{start:{line:15,column:0},end:{line:15,column:71}},'10':{start:{line:18,column:0},end:{line:18,column:88}},'11':{start:{line:21,column:0},end:{line:21,column:137}},'12':{start:{line:24,column:0},end:{line:24,column:91}},'13':{start:{line:27,column:0},end:{line:27,column:172}},'14':{start:{line:30,column:0},end:{line:30,column:128}},'15':{start:{line:32,column:0},end:{line:32,column:23}}},fnMap:{},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_alfc654ha.s[0]++,require('express'));const models=(cov_alfc654ha.s[1]++,require('../../../models/sequelize'));const router=(cov_alfc654ha.s[2]++,express.Router());const authMiddleware=(cov_alfc654ha.s[3]++,require('../auth/middleware'));const rolValidations=(cov_alfc654ha.s[4]++,require('../validations/rolValidation')(models));const rolController=(cov_alfc654ha.s[5]++,require('../../../controllers/rolController'));let validarPermisoGetRol=(cov_alfc654ha.s[6]++,authMiddleware.checkIsLoggedWithPermission('GET_ROLES'));let validarPermisoEditRol=(cov_alfc654ha.s[7]++,authMiddleware.checkIsLoggedWithPermission('EDIT_ROLES'));const{withError,expressValidatorMiddleware}=(cov_alfc654ha.s[8]++,require('./helpers'));// Listar todos los roles
cov_alfc654ha.s[9]++;router.get('/',validarPermisoGetRol,withError(rolController.v0.list));/* GET single rol. */cov_alfc654ha.s[10]++;router.get('/:rol_id([0-9]+)',validarPermisoGetRol,withError(rolController.v0.getOne));// Crear un rol
cov_alfc654ha.s[11]++;router.post('/',validarPermisoEditRol,rolValidations.createValidations,expressValidatorMiddleware,withError(rolController.v0.create));// Update un rol. Solo hace update de lo que se le pasa { nombre, descripcion}
cov_alfc654ha.s[12]++;router.patch('/:rol_id([0-9]+)',validarPermisoEditRol,withError(rolController.v0.update));// Crear el permiso de un rol
cov_alfc654ha.s[13]++;router.post('/:rol_id([0-9]+)/permisos',validarPermisoEditRol,rolValidations.addPermisoARolValidation,expressValidatorMiddleware,withError(rolController.v0.addPermiso));// Eliminar el permiso de un rol
cov_alfc654ha.s[14]++;router.delete('/:rol_id([0-9]+)/permisos/:permiso_id([0-9]+)',validarPermisoEditRol,withError(rolController.v0.deletePermiso));cov_alfc654ha.s[15]++;module.exports=router;