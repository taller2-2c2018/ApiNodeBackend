'use strict';var cov_xj7ywl2o6=function(){var path='/usr/src/tests/services/filesService_test.js',hash='9a2501605f514a37f81942967a68063176ec30d7',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/usr/src/tests/services/filesService_test.js',statementMap:{'0':{start:{line:2,column:0},end:{line:2,column:45}},'1':{start:{line:3,column:13},end:{line:3,column:35}},'2':{start:{line:4,column:15},end:{line:4,column:40}},'3':{start:{line:5,column:9},end:{line:5,column:28}},'4':{start:{line:6,column:13},end:{line:6,column:46}},'5':{start:{line:7,column:20},end:{line:7,column:65}},'6':{start:{line:11,column:0},end:{line:44,column:2}},'7':{start:{line:12,column:2},end:{line:17,column:4}},'8':{start:{line:13,column:4},end:{line:16,column:6}},'9':{start:{line:14,column:6},end:{line:14,column:48}},'10':{start:{line:15,column:6},end:{line:15,column:12}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:11,column:45},end:{line:11,column:46}},loc:{start:{line:11,column:57},end:{line:44,column:1}},line:11},'1':{name:'(anonymous_1)',decl:{start:{line:12,column:38},end:{line:12,column:39}},loc:{start:{line:12,column:54},end:{line:17,column:3}},line:12},'2':{name:'(anonymous_2)',decl:{start:{line:13,column:32},end:{line:13,column:33}},loc:{start:{line:13,column:45},end:{line:16,column:5}},line:13}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},f:{'0':0,'1':0,'2':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_xj7ywl2o6.s[0]++;require('dotenv').config({path:'.env.test'});let assert=(cov_xj7ywl2o6.s[1]++,require('chai').assert);let describe=(cov_xj7ywl2o6.s[2]++,require('mocha').describe);let it=(cov_xj7ywl2o6.s[3]++,require('mocha').it);let models=(cov_xj7ywl2o6.s[4]++,require('../../models/sequelize'));const fileService=(cov_xj7ywl2o6.s[5]++,require('../../services/fileService')(models));let idFileCreado;cov_xj7ywl2o6.s[6]++;describe('Verificaciones sobre FileService',function(){cov_xj7ywl2o6.f[0]++;cov_xj7ywl2o6.s[7]++;it('Obtener un file que no existe',function(done){cov_xj7ywl2o6.f[1]++;cov_xj7ywl2o6.s[8]++;fileService.get('-1').catch(function(e){cov_xj7ywl2o6.f[2]++;cov_xj7ywl2o6.s[9]++;assert(e.status===404,'El file existe');cov_xj7ywl2o6.s[10]++;done();});});/*it('Agregar un file', function (done) {
    let filename = 'filename'
    let originalname = 'originalname'
    let params = {
      id: null,
      _rev: null,
      created_at: null,
      updated_at: null,
      size: null,
      filename: null,
      resource: null
    }
    let file = {
      filename: filename,
      originalname: originalname,
      path: 'un path',
      size: 100
    }
    fileService.create(file, params).then((file) => {
      assert(file.id !== null, 'El file no existe')
      idFileCreado = file.id
      assert(file.originalname === originalname, 'El file no tiene bien el originalname')
      assert(file.filename === filename, 'El file no tiene bien el filename')
      done()
    })
  })*/});