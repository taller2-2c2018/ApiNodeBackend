var cov_ixevvjsi9=function(){var path='/usr/src/tests/routes/v0/api/api_test.js',hash='e0d1354afe4f44bffb3683fcfa96245777c6f362',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/usr/src/tests/routes/v0/api/api_test.js',statementMap:{'0':{start:{line:1,column:0},end:{line:1,column:45}},'1':{start:{line:2,column:15},end:{line:2,column:40}},'2':{start:{line:3,column:9},end:{line:3,column:28}},'3':{start:{line:4,column:13},end:{line:4,column:36}},'4':{start:{line:5,column:15},end:{line:5,column:37}},'5':{start:{line:6,column:10},end:{line:6,column:36}},'6':{start:{line:7,column:16},end:{line:7,column:36}},'7':{start:{line:8,column:17},end:{line:8,column:39}},'8':{start:{line:9,column:13},end:{line:9,column:40}},'9':{start:{line:10,column:0},end:{line:10,column:26}},'10':{start:{line:11,column:0},end:{line:11,column:51}},'11':{start:{line:13,column:12},end:{line:13,column:14}}},fnMap:{},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},f:{},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_ixevvjsi9.s[0]++;require('dotenv').config({path:'.env.test'});let describe=(cov_ixevvjsi9.s[1]++,require('mocha').describe);let it=(cov_ixevvjsi9.s[2]++,require('mocha').it);let before=(cov_ixevvjsi9.s[3]++,require('mocha').before);const assert=(cov_ixevvjsi9.s[4]++,require('chai').assert);let app=(cov_ixevvjsi9.s[5]++,require('../../../../app'));const request=(cov_ixevvjsi9.s[6]++,require('supertest'));var bodyParser=(cov_ixevvjsi9.s[7]++,require('body-parser'));const inic=(cov_ixevvjsi9.s[8]++,require('../bootstrapping'));cov_ixevvjsi9.s[9]++;app.use(bodyParser.json());cov_ixevvjsi9.s[10]++;app.use(bodyParser.urlencoded({extended:false}));let token=(cov_ixevvjsi9.s[11]++,'');/*describe('GET /v0/api/node', function() {
  before(function (done) {
    inic.crearUsuarioInicial('node',['EDIT_node','GET_node']).then(function (tokenNuevo) {
      assert(tokenNuevo !== undefined, 'No se obtiene un token valido')
      token = tokenNuevo
      done()
    })   
  })
  it('Tengo permisos para obtener los node', function(done) {
    request(app)
      .get('/v0/api/node')
      .set({ 'Authorization': token, Accept: 'application/json' })
      .expect(200,done)
  })
})*/